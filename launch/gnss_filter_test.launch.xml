<?xml version="1.0" encoding="UTF-8"?>
<launch>
  <arg name="vehicle_model" default="racing_kart"  description="vehicle model name"/>
  <arg name="gnss_delay" default="0.5"/>
  <arg name="use_filtered_gnss" default="true"/>
  <arg name="use_sim_time" default="true"/>

  <!-- Global parameters -->
  <group scoped="false">
    <include file="$(find-pkg-share global_parameter_loader)/launch/global_params.launch.py">
      <arg name="use_sim_time" value="$(var use_sim_time)"/>
      <arg name="vehicle_model" value="$(var vehicle_model)"/>
    </include>
  </group>

  <group>
    <push-ros-namespace namespace="localization_test"/>

    <node pkg="aic_tools" exec="gnss_filter" name="gnss_filter" output="both" args="--ros-args --log-level gnss_filter:=debug">
      <param from="$(find-pkg-share aic_tools)/config/gnss_filter.param.yaml"/>
      <remap from="/sensing/gnss/pose_with_covariance_filtered" to="/localization_test/sensing/gnss/pose_with_covariance_filtered"/>
    </node>

    <group if="$(var use_filtered_gnss)">
        <node pkg="imu_gnss_poser" exec="imu_gnss_poser_node" name="imu_gnss_poser" output="screen">
          <remap from="/sensing/gnss/pose_with_covariance" to="/localization_test/sensing/gnss/pose_with_covariance_filtered"/>
          <remap from="/localization/imu_gnss_poser/pose_with_covariance" to="/localization_test/imu_gnss_poser/pose_with_covariance"/>
          <param name="use_static_covariance" value="false"/>
        </node>
    </group>
    <group unless="$(var use_filtered_gnss)">
        <node pkg="imu_gnss_poser" exec="imu_gnss_poser_node" name="imu_gnss_poser" output="screen">
          <remap from="/localization/imu_gnss_poser/pose_with_covariance" to="/localization_test/imu_gnss_poser/pose_with_covariance"/>
          <param name="use_static_covariance" value="true"/>
        </node>
    </group>

    <include file="$(find-pkg-share ekf_localizer)/launch/ekf_localizer.launch.xml">
      <arg name="enable_yaw_bias_estimation" value="false"/>
      <arg name="tf_rate" value="50.0"/>
      <arg name="twist_smoothing_steps" value="1"/>
      <arg name="pose_smoothing_steps" value="1"/>
      <arg name="input_initial_pose_name" value="/localization/initial_pose3d"/>
      <arg name="input_pose_with_cov_name" value="/localization_test/imu_gnss_poser/pose_with_covariance"/>
      <arg name="input_twist_with_cov_name" value="/localization/twist_estimator/twist_with_covariance"/>
      <arg name="output_odom_name" value="kinematic_state"/>
      <arg name="output_pose_name" value="pose"/>
      <arg name="output_pose_with_covariance_name" value="/localization_test/pose_with_covariance"/>
      <arg name="output_biased_pose_name" value="biased_pose"/>
      <arg name="output_biased_pose_with_covariance_name" value="biased_pose_with_covariance"/>
      <arg name="output_twist_name" value="twist"/>
      <arg name="output_twist_with_covariance_name" value="twist_with_covariance"/>
      <arg name="proc_stddev_vx_c" value="10.0"/>
      <arg name="proc_stddev_wz_c" value="5.0"/>
      <arg name="pose_additional_delay" value="$(var gnss_delay)"/>
      <arg name="extend_state_step" value="100"/>
    </include>

    <!-- trigger to enable ekf_localizer -->
    <executable
      cmd="/localization_test/trigger_node std_srvs/srv/SetBool '{data: true}'"
      cwd="/home"
      launch-prefix="ros2 service call"
      output="screen"
      >
    </executable>

  </group>

</launch>
